{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.feedback_cycles": {
      "name": "feedback_cycles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "cycle_name": {
          "name": "cycle_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "frequency": {
          "name": "frequency",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'weekly'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_feedback_cycles_company_id": {
          "name": "idx_feedback_cycles_company_id",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_cycles_company_id_fkey": {
          "name": "feedback_cycles_company_id_fkey",
          "tableFrom": "feedback_cycles",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "feedback_cycles_frequency_check": {
          "name": "feedback_cycles_frequency_check",
          "value": "frequency = ANY (ARRAY['weekly'::text, 'biweekly'::text, 'monthly'::text, 'quarterly'::text])"
        },
        "feedback_cycles_status_check": {
          "name": "feedback_cycles_status_check",
          "value": "status = ANY (ARRAY['active'::text, 'completed'::text, 'draft'::text])"
        }
      },
      "policies": {
        "View cycles in company": {
          "name": "View cycles in company",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(company_id = ( SELECT cm.company_id\n   FROM company_members cm\n  WHERE (cm.id = auth.uid())))"
        },
        "Admins can insert feedback cycles": {
          "name": "Admins can insert feedback cycles",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Admins can update feedback cycles": {
          "name": "Admins can update feedback cycles",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Admins can delete feedback cycles": {
          "name": "Admins can delete feedback cycles",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_profiles": {
      "name": "user_profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "additional_data": {
          "name": "additional_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "job_title": {
          "name": "job_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "user_profiles_email_idx": {
          "name": "user_profiles_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_profiles_id_fkey": {
          "name": "user_profiles_id_fkey",
          "tableFrom": "user_profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "view_user_profiles": {
          "name": "view_user_profiles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "update_own_profile": {
          "name": "update_own_profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "insert_own_profile": {
          "name": "insert_own_profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.feedback_questions": {
      "name": "feedback_questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "question_text": {
          "name": "question_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_type": {
          "name": "question_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "question_description": {
          "name": "question_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "question_subtype": {
          "name": "question_subtype",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "company_value_id": {
          "name": "company_value_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "is_admin_manageable": {
          "name": "is_admin_manageable",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "idx_feedback_questions_company_value_id": {
          "name": "idx_feedback_questions_company_value_id",
          "columns": [
            {
              "expression": "company_value_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_questions_company_id_fkey": {
          "name": "feedback_questions_company_id_fkey",
          "tableFrom": "feedback_questions",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_questions_company_value_id_fkey": {
          "name": "feedback_questions_company_value_id_fkey",
          "tableFrom": "feedback_questions",
          "tableTo": "company_values",
          "schemaTo": "public",
          "columnsFrom": [
            "company_value_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "feedback_questions_question_type_check": {
          "name": "feedback_questions_question_type_check",
          "value": "question_type = ANY (ARRAY['rating'::text, 'text'::text, 'values'::text, 'ai'::text])"
        },
        "feedback_questions_scope_check": {
          "name": "feedback_questions_scope_check",
          "value": "scope = ANY (ARRAY['global'::text, 'company'::text])"
        }
      },
      "policies": {
        "View feedback questions": {
          "name": "View feedback questions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "((scope = 'global'::text) OR ((scope = 'company'::text) AND (company_id IN ( SELECT cm.company_id\n   FROM company_members cm\n  WHERE ((cm.id = auth.uid()) AND (cm.status = 'active'::member_status))))))"
        },
        "Admins manage feedback questions": {
          "name": "Admins manage feedback questions",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Admins update feedback questions": {
          "name": "Admins update feedback questions",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Admins delete feedback questions": {
          "name": "Admins delete feedback questions",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        },
        "service_role_bypass": {
          "name": "service_role_bypass",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        },
        "Authenticated users can create feedback questions of type 'ai'": {
          "name": "Authenticated users can create feedback questions of type 'ai'",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.feedback_sessions": {
      "name": "feedback_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "cycle_id": {
          "name": "cycle_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reminder_sent_at": {
          "name": "reminder_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "occurrence_id": {
          "name": "occurrence_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_feedback_sessions_occurrence_id": {
          "name": "idx_feedback_sessions_occurrence_id",
          "columns": [
            {
              "expression": "occurrence_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_feedback_sessions_provider_id": {
          "name": "idx_feedback_sessions_provider_id",
          "columns": [
            {
              "expression": "provider_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_sessions_cycle_id_fkey": {
          "name": "feedback_sessions_cycle_id_fkey",
          "tableFrom": "feedback_sessions",
          "tableTo": "feedback_cycles",
          "schemaTo": "public",
          "columnsFrom": [
            "cycle_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_sessions_occurrence_id_fkey": {
          "name": "feedback_sessions_occurrence_id_fkey",
          "tableFrom": "feedback_sessions",
          "tableTo": "feedback_cycle_occurrences",
          "schemaTo": "public",
          "columnsFrom": [
            "occurrence_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_sessions_provider_id_fkey": {
          "name": "feedback_sessions_provider_id_fkey",
          "tableFrom": "feedback_sessions",
          "tableTo": "company_members",
          "schemaTo": "public",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "feedback_sessions_status_check": {
          "name": "feedback_sessions_status_check",
          "value": "status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text])"
        }
      },
      "policies": {
        "view_feedback_sessions": {
          "name": "view_feedback_sessions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(cycle_id IN ( SELECT fc.id\n   FROM (feedback_cycles fc\n     JOIN company_members cm ON ((fc.company_id = cm.company_id)))\n  WHERE ((cm.id = auth.uid()) AND (cm.status = 'active'::member_status))))"
        },
        "insert_feedback_sessions": {
          "name": "insert_feedback_sessions",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "update_feedback_sessions": {
          "name": "update_feedback_sessions",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "admin_feedback_sessions": {
          "name": "admin_feedback_sessions",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.feedback_responses": {
      "name": "feedback_responses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "recipient_id": {
          "name": "recipient_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "rating_value": {
          "name": "rating_value",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "text_response": {
          "name": "text_response",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "has_comment": {
          "name": "has_comment",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "comment_text": {
          "name": "comment_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "skipped": {
          "name": "skipped",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "nominated_user_id": {
          "name": "nominated_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "nomination_date": {
          "name": "nomination_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_feedback_responses_nominated_user_id": {
          "name": "idx_feedback_responses_nominated_user_id",
          "columns": [
            {
              "expression": "nominated_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_responses_nominated_user_id_fkey": {
          "name": "feedback_responses_nominated_user_id_fkey",
          "tableFrom": "feedback_responses",
          "tableTo": "feedback_user_identities",
          "schemaTo": "public",
          "columnsFrom": [
            "nominated_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "feedback_responses_question_id_fkey": {
          "name": "feedback_responses_question_id_fkey",
          "tableFrom": "feedback_responses",
          "tableTo": "feedback_questions",
          "schemaTo": "public",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_responses_recipient_id_fkey": {
          "name": "feedback_responses_recipient_id_fkey",
          "tableFrom": "feedback_responses",
          "tableTo": "feedback_recipients",
          "schemaTo": "public",
          "columnsFrom": [
            "recipient_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_responses_session_id_fkey": {
          "name": "feedback_responses_session_id_fkey",
          "tableFrom": "feedback_responses",
          "tableTo": "feedback_sessions",
          "schemaTo": "public",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Create/update responses": {
          "name": "Create/update responses",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM feedback_sessions fs\n  WHERE ((feedback_responses.session_id = fs.id) AND (fs.provider_id = ( SELECT auth.uid() AS uid)))))"
        },
        "View own provided responses": {
          "name": "View own provided responses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "manager_view_team_feedback_responses": {
          "name": "manager_view_team_feedback_responses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "View feedback provided": {
          "name": "View feedback provided",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "view_provided_feedback_responses": {
          "name": "view_provided_feedback_responses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "view_received_feedback_responses": {
          "name": "view_received_feedback_responses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "manage_own_feedback_responses": {
          "name": "manage_own_feedback_responses",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "admin_feedback_responses": {
          "name": "admin_feedback_responses",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.feedback_recipients": {
      "name": "feedback_recipients",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "recipient_id": {
          "name": "recipient_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_feedback_recipients_session_id": {
          "name": "idx_feedback_recipients_session_id",
          "columns": [
            {
              "expression": "session_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_recipients_recipient_id_fkey": {
          "name": "feedback_recipients_recipient_id_fkey",
          "tableFrom": "feedback_recipients",
          "tableTo": "feedback_user_identities",
          "schemaTo": "public",
          "columnsFrom": [
            "recipient_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_recipients_session_id_fkey": {
          "name": "feedback_recipients_session_id_fkey",
          "tableFrom": "feedback_recipients",
          "tableTo": "feedback_sessions",
          "schemaTo": "public",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "feedback_recipients_status_check": {
          "name": "feedback_recipients_status_check",
          "value": "status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text])"
        }
      },
      "policies": {
        "View self as recipient": {
          "name": "View self as recipient",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM feedback_user_identities fui\n  WHERE ((feedback_recipients.recipient_id = fui.id) AND (fui.id = ( SELECT auth.uid() AS uid)))))"
        },
        "View assigned feedback tasks": {
          "name": "View assigned feedback tasks",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Managers view direct reports as recipients": {
          "name": "Managers view direct reports as recipients",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "manager_view_team_feedback_recipients": {
          "name": "manager_view_team_feedback_recipients",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "view_feedback_recipients": {
          "name": "view_feedback_recipients",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "manage_own_feedback_recipients": {
          "name": "manage_own_feedback_recipients",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "admin_feedback_recipients": {
          "name": "admin_feedback_recipients",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.invited_users": {
      "name": "invited_users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invite_code": {
          "name": "invite_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "job_title": {
          "name": "job_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "invited_users_company_id_fkey": {
          "name": "invited_users_company_id_fkey",
          "tableFrom": "invited_users",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invited_users_email_key": {
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false,
          "name": "invited_users_email_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "service_role_bypass": {
          "name": "service_role_bypass",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "withCheck": "true",
          "using": "true"
        },
        "Verify invite code": {
          "name": "Verify invite code",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ]
        },
        "View invited users": {
          "name": "View invited users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.auth_tokens": {
      "name": "auth_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "auth_tokens_token_idx": {
          "name": "auth_tokens_token_idx",
          "columns": [
            {
              "expression": "token",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "auth_tokens_session_id_fkey": {
          "name": "auth_tokens_session_id_fkey",
          "tableFrom": "auth_tokens",
          "tableTo": "feedback_sessions",
          "schemaTo": "public",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "auth_tokens_user_id_fkey": {
          "name": "auth_tokens_user_id_fkey",
          "tableFrom": "auth_tokens",
          "tableTo": "company_members",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "auth_tokens_token_key": {
          "columns": [
            "token"
          ],
          "nullsNotDistinct": false,
          "name": "auth_tokens_token_key"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.feedback_summaries": {
      "name": "feedback_summaries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "timeframe": {
          "name": "timeframe",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "summary": {
          "name": "summary",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "feedback_data": {
          "name": "feedback_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_feedback_summaries_timeframe": {
          "name": "idx_feedback_summaries_timeframe",
          "columns": [
            {
              "expression": "timeframe",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_feedback_summaries_user_id": {
          "name": "idx_feedback_summaries_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_summaries_user_id_fkey": {
          "name": "feedback_summaries_user_id_fkey",
          "tableFrom": "feedback_summaries",
          "tableTo": "company_members",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "view_own_summaries": {
          "name": "view_own_summaries",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "insert_own_summaries": {
          "name": "insert_own_summaries",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.pending_registrations": {
      "name": "pending_registrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "processed_at": {
          "name": "processed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pending_registrations_company_id_fkey": {
          "name": "pending_registrations_company_id_fkey",
          "tableFrom": "pending_registrations",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "pending_registrations_user_id_key": {
          "columns": [
            "user_id"
          ],
          "nullsNotDistinct": false,
          "name": "pending_registrations_user_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "service_role_bypass": {
          "name": "service_role_bypass",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "withCheck": "true",
          "using": "true"
        }
      },
      "isRLSEnabled": true
    },
    "public.feedback_user_identities": {
      "name": "feedback_user_identities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "identity_type": {
          "name": "identity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "service_role_bypass": {
          "name": "service_role_bypass",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "withCheck": "true",
          "using": "true"
        },
        "View identities in company": {
          "name": "View identities in company",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "view_feedback_user_identities": {
          "name": "view_feedback_user_identities",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "create_feedback_user_identities": {
          "name": "create_feedback_user_identities",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "admin_feedback_user_identities": {
          "name": "admin_feedback_user_identities",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "admin_delete_feedback_user_identities": {
          "name": "admin_delete_feedback_user_identities",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.manager_feedback_summaries": {
      "name": "manager_feedback_summaries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "manager_id": {
          "name": "manager_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "employee_id": {
          "name": "employee_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "timeframe": {
          "name": "timeframe",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "summary": {
          "name": "summary",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "feedback_data": {
          "name": "feedback_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_manager_feedback_summaries_employee_id": {
          "name": "idx_manager_feedback_summaries_employee_id",
          "columns": [
            {
              "expression": "employee_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_manager_feedback_summaries_manager_id": {
          "name": "idx_manager_feedback_summaries_manager_id",
          "columns": [
            {
              "expression": "manager_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_manager_feedback_summaries_timeframe": {
          "name": "idx_manager_feedback_summaries_timeframe",
          "columns": [
            {
              "expression": "timeframe",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_manager_feedback_summaries_type": {
          "name": "idx_manager_feedback_summaries_type",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "manager_feedback_summaries_employee_id_fkey": {
          "name": "manager_feedback_summaries_employee_id_fkey",
          "tableFrom": "manager_feedback_summaries",
          "tableTo": "company_members",
          "schemaTo": "public",
          "columnsFrom": [
            "employee_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "manager_feedback_summaries_manager_id_fkey": {
          "name": "manager_feedback_summaries_manager_id_fkey",
          "tableFrom": "manager_feedback_summaries",
          "tableTo": "company_members",
          "schemaTo": "public",
          "columnsFrom": [
            "manager_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.companies": {
      "name": "companies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "domains": {
          "name": "domains",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        },
        "industry": {
          "name": "industry",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_interval": {
          "name": "subscription_interval",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_status": {
          "name": "subscription_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_count": {
          "name": "user_count",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "trial_end": {
          "name": "trial_end",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_companies_domains": {
          "name": "idx_companies_domains",
          "columns": [
            {
              "expression": "domains",
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow updating companies during registration flow": {
          "name": "Allow updating companies during registration flow",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "anon",
            "authenticated"
          ],
          "withCheck": "true",
          "using": "true"
        },
        "Users can view their company": {
          "name": "Users can view their company",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Allow unregistered users to create companies": {
          "name": "Allow unregistered users to create companies",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ]
        },
        "Allow users to create companies during registration": {
          "name": "Allow users to create companies during registration",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon",
            "authenticated"
          ]
        },
        "Admins can manage company": {
          "name": "Admins can manage company",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "Allow users to check company domains": {
          "name": "Allow users to check company domains",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.company_members": {
      "name": "company_members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "status": {
          "name": "status",
          "type": "member_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        }
      },
      "indexes": {
        "idx_company_members_company_id": {
          "name": "idx_company_members_company_id",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "company_members_company_id_fkey": {
          "name": "company_members_company_id_fkey",
          "tableFrom": "company_members",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "company_members_id_fkey": {
          "name": "company_members_id_fkey",
          "tableFrom": "company_members",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "company_members_id_fkey1": {
          "name": "company_members_id_fkey1",
          "tableFrom": "company_members",
          "tableTo": "user_profiles",
          "schemaTo": "public",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "View own company member record": {
          "name": "View own company member record",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(id = auth.uid())"
        },
        "View company members": {
          "name": "View company members",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Admins can update any member status": {
          "name": "Admins can update any member status",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.manager_relationships": {
      "name": "manager_relationships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "member_id": {
          "name": "member_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "manager_id": {
          "name": "manager_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "relationship_type": {
          "name": "relationship_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'direct'"
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "invited_member_id": {
          "name": "invited_member_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invited_manager_id": {
          "name": "invited_manager_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_manager_relationships_combined": {
          "name": "idx_manager_relationships_combined",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "member_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "manager_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_manager_relationships_company_id": {
          "name": "idx_manager_relationships_company_id",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_manager_relationships_manager_id": {
          "name": "idx_manager_relationships_manager_id",
          "columns": [
            {
              "expression": "manager_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_manager_relationships_member_id": {
          "name": "idx_manager_relationships_member_id",
          "columns": [
            {
              "expression": "member_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "manager_relationships_company_id_fkey": {
          "name": "manager_relationships_company_id_fkey",
          "tableFrom": "manager_relationships",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "manager_relationships_invited_manager_id_fkey": {
          "name": "manager_relationships_invited_manager_id_fkey",
          "tableFrom": "manager_relationships",
          "tableTo": "invited_users",
          "schemaTo": "public",
          "columnsFrom": [
            "invited_manager_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "manager_relationships_invited_member_id_fkey": {
          "name": "manager_relationships_invited_member_id_fkey",
          "tableFrom": "manager_relationships",
          "tableTo": "invited_users",
          "schemaTo": "public",
          "columnsFrom": [
            "invited_member_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "manager_relationships_manager_id_fkey": {
          "name": "manager_relationships_manager_id_fkey",
          "tableFrom": "manager_relationships",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "manager_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "manager_relationships_member_id_fkey": {
          "name": "manager_relationships_member_id_fkey",
          "tableFrom": "manager_relationships",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "member_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "check_at_least_one_member": {
          "name": "check_at_least_one_member",
          "value": "((member_id IS NOT NULL) AND (invited_member_id IS NULL)) OR ((member_id IS NULL) AND (invited_member_id IS NOT NULL))"
        },
        "check_manager_consistency": {
          "name": "check_manager_consistency",
          "value": "((manager_id IS NOT NULL) AND (invited_manager_id IS NULL)) OR ((manager_id IS NULL) AND (invited_manager_id IS NOT NULL)) OR ((manager_id IS NULL) AND (invited_manager_id IS NULL))"
        }
      },
      "policies": {
        "manage_manager_relationships": {
          "name": "manage_manager_relationships",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM company_members cm\n  WHERE ((cm.id = auth.uid()) AND (cm.company_id = manager_relationships.company_id) AND (cm.role = 'admin'::user_role) AND (cm.status = 'active'::member_status))))",
          "using": "(EXISTS ( SELECT 1\n   FROM company_members cm\n  WHERE ((cm.id = auth.uid()) AND (cm.company_id = manager_relationships.company_id) AND (cm.role = 'admin'::user_role) AND (cm.status = 'active'::member_status))))"
        },
        "Admins manage manager relationships": {
          "name": "Admins manage manager relationships",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "View relationships": {
          "name": "View relationships",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.feedback_cycle_occurrences": {
      "name": "feedback_cycle_occurrences",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "cycle_id": {
          "name": "cycle_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "occurrence_number": {
          "name": "occurrence_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "emails_sent_count": {
          "name": "emails_sent_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "responses_count": {
          "name": "responses_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "emails_sent_at": {
          "name": "emails_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reminders_sent_at": {
          "name": "reminders_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_feedback_cycle_occurrences_cycle_id": {
          "name": "idx_feedback_cycle_occurrences_cycle_id",
          "columns": [
            {
              "expression": "cycle_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_feedback_cycle_occurrences_status": {
          "name": "idx_feedback_cycle_occurrences_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_cycle_occurrences_cycle_id_fkey": {
          "name": "feedback_cycle_occurrences_cycle_id_fkey",
          "tableFrom": "feedback_cycle_occurrences",
          "tableTo": "feedback_cycles",
          "schemaTo": "public",
          "columnsFrom": [
            "cycle_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "feedback_cycle_occurrences_status_check": {
          "name": "feedback_cycle_occurrences_status_check",
          "value": "status = ANY (ARRAY['active'::text, 'completed'::text])"
        }
      },
      "policies": {
        "View feedback cycle occurrences": {
          "name": "View feedback cycle occurrences",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM (feedback_cycles fc\n     JOIN company_members cm ON ((fc.company_id = cm.company_id)))\n  WHERE ((feedback_cycle_occurrences.cycle_id = fc.id) AND (cm.id = auth.uid()) AND (cm.status = 'active'::member_status))))"
        },
        "Admins manage feedback cycle occurrences": {
          "name": "Admins manage feedback cycle occurrences",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.demo_leads": {
      "name": "demo_leads",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company": {
          "name": "company",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company_size": {
          "name": "company_size",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        }
      },
      "indexes": {
        "demo_leads_email_idx": {
          "name": "demo_leads_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Anyone can insert a demo lead": {
          "name": "Anyone can insert a demo lead",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ],
          "withCheck": "true"
        }
      },
      "isRLSEnabled": true
    },
    "public.company_values": {
      "name": "company_values",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "icon": {
          "name": "icon",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_company_values_company_id": {
          "name": "idx_company_values_company_id",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "company_values_company_id_fkey": {
          "name": "company_values_company_id_fkey",
          "tableFrom": "company_values",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "service_role_bypass": {
          "name": "service_role_bypass",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "withCheck": "true",
          "using": "true"
        },
        "View company values": {
          "name": "View company values",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Admins create company values": {
          "name": "Admins create company values",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Admins update company values": {
          "name": "Admins update company values",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Admins delete company values": {
          "name": "Admins delete company values",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.logs": {
      "name": "logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Authenticated users can view logs": {
          "name": "Authenticated users can view logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "isRLSEnabled": true
    },
    "public.debug_logs": {
      "name": "debug_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "event_type": {
          "name": "event_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_email": {
          "name": "user_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "details": {
          "name": "details",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.member_status": {
      "name": "member_status",
      "values": [
        "pending",
        "active",
        "deactivated"
      ],
      "schema": "public"
    },
    "public.user_role": {
      "name": "user_role",
      "values": [
        "admin",
        "member"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.feedback_summaries_view": {
      "name": "feedback_summaries_view",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "timeframe": {
          "name": "timeframe",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "summary": {
          "name": "summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_email": {
          "name": "user_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT fs.id, fs.user_id, fs.timeframe, fs.summary, fs.created_at, up.name AS user_name, up.email AS user_email, cm.company_id FROM feedback_summaries fs JOIN user_profiles up ON fs.user_id = up.id JOIN company_members cm ON fs.user_id = cm.id",
      "materialized": false
    },
    "public.org_structure": {
      "name": "org_structure",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "company_id": {
          "name": "company_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "is_invited": {
          "name": "is_invited",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "is_pending": {
          "name": "is_pending",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "manager_id": {
          "name": "manager_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "relationship_type": {
          "name": "relationship_type",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT u.id, cm.role, p.email::character varying AS email, cm.company_id, false AS is_invited, false AS is_pending, COALESCE(mr.manager_id, imr.id) AS manager_id, COALESCE(mr.relationship_type, 'direct'::character varying) AS relationship_type FROM auth.users u JOIN company_members cm ON u.id = cm.id LEFT JOIN user_profiles p ON u.id = p.id LEFT JOIN ( SELECT DISTINCT ON (manager_relationships.member_id, manager_relationships.company_id) manager_relationships.member_id, manager_relationships.manager_id, manager_relationships.company_id, manager_relationships.relationship_type, manager_relationships.invited_manager_id FROM manager_relationships ORDER BY manager_relationships.member_id, manager_relationships.company_id, manager_relationships.updated_at DESC) mr ON u.id = mr.member_id AND cm.company_id = mr.company_id LEFT JOIN invited_users imr ON mr.invited_manager_id = imr.id WHERE cm.status = 'active'::member_status UNION ALL SELECT iu.id, iu.role, iu.email::character varying AS email, iu.company_id, true AS is_invited, false AS is_pending, COALESCE(mr.manager_id, imr.id) AS manager_id, COALESCE(mr.relationship_type, 'direct'::character varying) AS relationship_type FROM invited_users iu LEFT JOIN ( SELECT DISTINCT ON (manager_relationships.invited_member_id, manager_relationships.company_id) manager_relationships.invited_member_id, manager_relationships.manager_id, manager_relationships.company_id, manager_relationships.relationship_type, manager_relationships.invited_manager_id FROM manager_relationships ORDER BY manager_relationships.invited_member_id, manager_relationships.company_id, manager_relationships.updated_at DESC) mr ON iu.id = mr.invited_member_id AND iu.company_id = mr.company_id LEFT JOIN invited_users imr ON mr.invited_manager_id = imr.id WHERE iu.status = 'pending'::text AND NOT (EXISTS ( SELECT 1 FROM company_members cm JOIN user_profiles p ON cm.id = p.id WHERE lower(p.email) = lower(iu.email) AND cm.company_id = iu.company_id)) UNION ALL SELECT pr.user_id AS id, pr.role, pr.email::character varying AS email, pr.company_id, false AS is_invited, true AS is_pending, COALESCE(mr.manager_id, imr.id) AS manager_id, COALESCE(mr.relationship_type, 'direct'::character varying) AS relationship_type FROM pending_registrations pr LEFT JOIN ( SELECT DISTINCT ON (manager_relationships.member_id, manager_relationships.company_id) manager_relationships.member_id, manager_relationships.manager_id, manager_relationships.company_id, manager_relationships.relationship_type, manager_relationships.invited_manager_id FROM manager_relationships ORDER BY manager_relationships.member_id, manager_relationships.company_id, manager_relationships.updated_at DESC) mr ON pr.user_id = mr.member_id AND pr.company_id = mr.company_id LEFT JOIN invited_users imr ON mr.invited_manager_id = imr.id WHERE pr.status = 'pending'::text AND pr.processed_at IS NULL AND NOT (EXISTS ( SELECT 1 FROM company_members cm WHERE cm.id = pr.user_id AND cm.company_id = pr.company_id)) AND NOT (EXISTS ( SELECT 1 FROM invited_users iu WHERE lower(iu.email) = lower(pr.email) AND iu.company_id = pr.company_id))",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "companies": {
        "columns": {
          "domains": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}