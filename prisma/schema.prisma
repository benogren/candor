generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

// ENUMS (Make sure they match your Supabase ENUM definitions)
enum user_role {
  member
  admin
  owner

  @@schema("public") // Add this
}

enum member_status {
  pending
  active
  deactivated

  @@schema("public") // Add this
}

// COMPANIES TABLE
model companies {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  domains    String[] @default([])

  members    company_members[]

  @@schema("public")
}

// COMPANY MEMBERS TABLE
model company_members {
  id         String        @id
  company_id String
  role       user_role     @default(member)
  created_at DateTime      @default(now())
  updated_at DateTime      @default(now())
  status     member_status @default(pending)
  manager_id String?

  // Relations
  company        companies        @relation(fields: [company_id], references: [id], onDelete: Cascade)
  manager        company_members? @relation("ManagerToDirectReports", fields: [manager_id], references: [id], onDelete: SetNull)
  direct_reports company_members[] @relation("ManagerToDirectReports")

  @@schema("public")
}

// USER PROFILES TABLE
model user_profiles {
  id         String   @id
  email      String
  name       String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  manager_id String?
  
  @@schema("public")
}

